#!/bin/bash

gitVersion="$(git tag -l --sort=-version:refname --merged HEAD 'v*' | head -n 1)"
gitBranch="$(git rev-parse --abbrev-ref HEAD)"
test "$gitBranch" = "HEAD" && gitBranch="$CIRCLE_BRANCH"
test "$gitBranch" = "master" && gitBranch=
gitRevision="$(git log -1 --format='%h')"
git update-index -q --refresh --unmerged >/dev/null
git diff-index --quiet HEAD || gitRevision="${gitRevision}-dirty"
gitDate="$(date -u +"%F_%T" --date="@$(git log -1 --format='%ad' --date=unix)")"
buildDate="$(date -u +"%F_%T")"

set -x -e -o pipefail

export GOFLAGS="-mod=readonly"
export CGO_ENABLED=0

rm -rf bin/
mkdir bin/

# Use `go build` (instead of `go install`) to build binaries for non-host
# machine environment (like build on Mac OS for deployment into a linux-based
# Docker container).
for pkg in $(go list ./cmd/*); do
	go build -o $PWD/bin/$(basename $pkg) \
		-ldflags "
			-X 'main.gitVersion=$gitVersion'
			-X 'main.gitBranch=$gitBranch'
			-X 'main.gitRevision=$gitRevision'
			-X 'main.gitDate=$gitDate'
			-X 'main.buildDate=$buildDate'
		" \
		"$@" $pkg
done
